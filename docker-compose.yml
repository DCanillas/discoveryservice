version: '3'

services:
  mysql:
    container_name: "mysql"
    image: "mysql"
    environment:
      MYSQL_ROOT_PASSWORD: 1234
    ports:
      - "3306:3306"
    networks:
      - spring-net

  mongo:
    container_name: "mongo"
    image: "mongo"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 1234
      MONGO_INITDB_DATABASE: log_db
    ports:
      - "27017:27017"
    networks:
      - spring-net

  zookeeper:
    container_name: "zookeeper"
    image: "wurstmeister/zookeeper"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - spring-net

  kafka:
    container_name: "kafka"
    image: "wurstmeister/kafka"
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka
    depends_on:
      - zookeeper
    networks:
      - spring-net

  discovery-service:
    container_name: "discovery-service"
    image: discovery-service.jar
    build:
      context: "${DISCOVERY_CONTEXT}"
      dockerfile: "Dockerfile"
    ports:
      - "8761:8761"
    networks:
      - spring-net
    environment:
      EUREKA_HOST: discovery-service
      EUREKA_PORT: 8761

networks:
  spring-net:
    external: true